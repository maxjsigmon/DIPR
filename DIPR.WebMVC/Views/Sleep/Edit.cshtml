@model DIPR.Models.Sleep.SleepEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Sleep</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Update Sleep Data</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.SleepID)
    <div class="form-group">
        @Html.LabelFor(model => model.Babies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BabyID, Model.Babies, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Babies, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Location, "--Select a Sleep Location--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SleepStart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SleepStart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SleepStart, "", new { @class = "text-danger" })
            <p>Enter time as MM/dd/yy hh:mm AM or PM </p>
            <p>e.g. 12/15/2020 11:30 PM </p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SleepEnd, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SleepEnd, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SleepEnd, "", new { @class = "text-danger" })
            <p>Enter time as MM/dd/yy hh:mm AM or PM </p>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success"/>
        </div>
    </div>

    <button type="button"
            onclick="document.getElementById('dateTime').innerHTML = Date()">
        Click to display the current date and time
    </button>

    <p id="dateTime"></p>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
