@model DIPR.Models.Diaper.DiaperCreate

@{
    ViewBag.Title = "Create";
}

<h2>Diapers</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Add Diaper</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="form-group">
    @Html.LabelFor(model => model.Babies, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.DropDownListFor(model => model.BabyID, Model.Babies, "--Select Baby--", new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Babies, "", new { @class = "text-danger" })
    </div>
</div>

    <div class="form-group">
        @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Soiled, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model => model.Soiled, "--Select Soil Type--", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Soiled, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>

    <button type="button"
            onclick="document.getElementById('dateTime').innerHTML = Date()">
        Click to display the current Date and Time.
    </button>

    <p id="dateTime"></p>

</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
